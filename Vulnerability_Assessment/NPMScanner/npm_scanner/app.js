const dependants = require('npm-dependants')
const axios = require('axios')
const queryRegistry = require('query-registry')

const getDependants = async (package_name) => {

    console.log(`Getting Dependants information for ${package_name}...`);

    let dependantsList = [];
    for await (const dependant of dependants(package_name))
        dependantsList.push(dependant);

    console.log(`Dependants Information Gathered!`);

    return dependantsList

};

const getPackageInfo = async (name) => {
    return await queryRegistry.getPackument({ name });
};

const getGitRepositoryForPackage = async (packageName) => {

     return await getPackageInfo(packageName)
         .then(value => {
             if (value && value.gitRepository)
                 return value.gitRepository.url;
             return "Not Found"
         });

};

const getScoreForPackage = async (text) => {
    return await queryRegistry.searchPackages({ query: { text } })
        .then(value => {
            if (value.objects && value.objects[0]) {
                return value.objects[0].score.final;
            }
        });
};

const processDependants = async (dependantsList) => {

    let dependantsReportList = []

    console.log("Processing Dependants...")

    let count = 0;

    for (const dependantIdx in dependantsList) {

        process.stdout.write(`Dependant ${count++} out of ${dependantsList.length}\r`)

        let dependantName = dependantsList[dependantIdx];
        let dependantScore = await getScoreForPackage(dependantName);
        let dependantGitRepository = await getGitRepositoryForPackage(dependantName);

        dependantsReportList.push({name: dependantName , score: dependantScore, gitRepository: dependantGitRepository});

    }

    dependantsReportList.sort((dependant1, dependant2) => dependant2.score - dependant1.score);
    return dependantsReportList;

};

const printDependantsReport = (dependantsReportList) => {

    for (const dependantReportIdx in dependantsReportList) {

        let dependantReport = dependantsReportList[dependantReportIdx]

        console.log('-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=');
        console.log();
        console.log(` ${dependantReport.name}`);
        console.log()
        console.log(`  Score: ${dependantReport.score}`);
        console.log(`  Git Repository: ${dependantReport.gitRepository}`);
        console.log();
        console.log('-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=');
        console.log()

    }

};

const main = () => {

    getDependants('marked').then(dependantsList => {
        processDependants(dependantsList).then(r => printDependantsReport(r));
    });

};

main()
